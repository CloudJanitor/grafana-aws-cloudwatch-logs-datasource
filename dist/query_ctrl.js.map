{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","AwsCloudWatchLogsDatasourceQueryCtrl","$scope","$injector","templateSrv","scope","target","type","region","logGroupName","logStreamNames","filterPattern","suggestLogGroupName","query","callback","defaultRegion","datasource","doMetricQueryRequest","replace","prefix","then","data","map","d","value","suggestLogStreamName","panelCtrl","refresh","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,e,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;sDAEIC,oC;;;AACX,sDAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,WAA/B,EAA4C;AAAA;;AAAA,kLACpCF,MADoC,EAC5BC,SAD4B;;AAG1C,gBAAKE,KAAL,GAAaH,MAAb;AACA,gBAAKI,MAAL,CAAYC,IAAZ,GAAmB,MAAKD,MAAL,CAAYC,IAAZ,IAAoB,WAAvC;AACA,gBAAKD,MAAL,CAAYE,MAAZ,GAAqB,MAAKF,MAAL,CAAYE,MAAZ,IAAsB,EAA3C;AACA,gBAAKF,MAAL,CAAYG,YAAZ,GAA2B,MAAKH,MAAL,CAAYG,YAAZ,IAA4B,EAAvD;AACA,gBAAKH,MAAL,CAAYI,cAAZ,GAA6B,MAAKJ,MAAL,CAAYI,cAAZ,IAA8B,EAA3D;AACA,gBAAKJ,MAAL,CAAYK,aAAZ,GAA4B,MAAKL,MAAL,CAAYK,aAAZ,IAA6B,EAAzD;AACA,gBAAKP,WAAL,GAAmBA,WAAnB;;AAEA,gBAAKQ,mBAAL,GAA2B,UAACC,KAAD,EAAQC,QAAR,EAAqB;AAC9C,gBAAIN,SAAS,MAAKF,MAAL,CAAYE,MAAZ,IAAsB,MAAKO,aAAxC;AACA,mBAAO,MAAKC,UAAL,CAAgBC,oBAAhB,CAAqC,iBAArC,EAAwD;AAC7DT,sBAAQ,MAAKJ,WAAL,CAAiBc,OAAjB,CAAyBV,MAAzB,CADqD;AAE7DW,sBAAQN;AAFqD,aAAxD,EAGJO,IAHI,CAGC,gBAAQ;AACdN,uBAASO,KAAKC,GAAL,CAAS,aAAK;AAAE,uBAAOC,EAAEC,KAAT;AAAiB,eAAjC,CAAT;AACD,aALM,CAAP;AAMD,WARD;;AAUA,gBAAKC,oBAAL,GAA4B,UAACZ,KAAD,EAAQC,QAAR,EAAqB;AAC/C,gBAAI,CAAC,MAAKR,MAAL,CAAYG,YAAjB,EAA+B;AAC7B,qBAAOK,SAAS,EAAT,CAAP;AACD;AACD,gBAAIN,SAAS,MAAKF,MAAL,CAAYE,MAAZ,IAAsB,MAAKO,aAAxC;AACA,mBAAO,MAAKC,UAAL,CAAgBC,oBAAhB,CAAqC,kBAArC,EAAyD;AAC9DT,sBAAQ,MAAKJ,WAAL,CAAiBc,OAAjB,CAAyBV,MAAzB,CADsD;AAE9DC,4BAAc,MAAKH,MAAL,CAAYG;AAFoC,aAAzD,EAGJW,IAHI,CAGC,gBAAQ;AACdN,uBAASO,KAAKC,GAAL,CAAS,aAAK;AAAE,uBAAOC,EAAEC,KAAT;AAAiB,eAAjC,CAAT;AACD,aALM,CAAP;AAMD,WAXD;AArB0C;AAiC3C;;;;6CAEkB;AACjB,iBAAKE,SAAL,CAAeC,OAAf;AACD;;;;QAtCuD3B,S;;;;AAyC1DC,2CAAqC2B,WAArC,GAAmD,4BAAnD","file":"query_ctrl.js","sourcesContent":["import { QueryCtrl } from 'app/plugins/sdk';\n\nexport class AwsCloudWatchLogsDatasourceQueryCtrl extends QueryCtrl {\n  constructor($scope, $injector, templateSrv) {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.target.type = this.target.type || 'timeserie';\n    this.target.region = this.target.region || '';\n    this.target.logGroupName = this.target.logGroupName || '';\n    this.target.logStreamNames = this.target.logStreamNames || [];\n    this.target.filterPattern = this.target.filterPattern || '';\n    this.templateSrv = templateSrv;\n\n    this.suggestLogGroupName = (query, callback) => {\n      let region = this.target.region || this.defaultRegion;\n      return this.datasource.doMetricQueryRequest('log_group_names', {\n        region: this.templateSrv.replace(region),\n        prefix: query\n      }).then(data => {\n        callback(data.map(d => { return d.value; }))\n      });\n    };\n\n    this.suggestLogStreamName = (query, callback) => {\n      if (!this.target.logGroupName) {\n        return callback([]);\n      }\n      let region = this.target.region || this.defaultRegion;\n      return this.datasource.doMetricQueryRequest('log_stream_names', {\n        region: this.templateSrv.replace(region),\n        logGroupName: this.target.logGroupName\n      }).then(data => {\n        callback(data.map(d => { return d.value; }))\n      });\n    };\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh();\n  }\n}\n\nAwsCloudWatchLogsDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}